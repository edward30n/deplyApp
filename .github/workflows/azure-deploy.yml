name: Azure Single Container Deploy

on:
  workflow_dispatch:
    inputs:
      acrName:
        description: 'Nombre del ACR (existente)'
        required: true
      resourceGroup:
        description: 'Resource Group del App Service'
        required: true
      webAppName:
        description: 'Nombre del App Service'
        required: true
      imageTag:
        description: 'Tag de la imagen'
        default: 'latest'
        required: true
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'backend/**'
      - 'frontend/**'

jobs:
  build-push-update:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Azure Login (OIDC)
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Set variables
      id: vars
      run: |
        # Usar valores por defecto para el entorno de desarrollo si no se especifican
        ACR_NAME="${{ github.event.inputs.acrName }}"
        RESOURCE_GROUP="${{ github.event.inputs.resourceGroup }}"
        WEB_APP_NAME="${{ github.event.inputs.webAppName }}"
        IMAGE_TAG="${{ github.event.inputs.imageTag }}"
        
        # Valores por defecto para entorno de desarrollo
        if [ -z "$ACR_NAME" ]; then ACR_NAME="recwaydevacr"; fi
        if [ -z "$RESOURCE_GROUP" ]; then RESOURCE_GROUP="recway-dev-rg"; fi
        if [ -z "$WEB_APP_NAME" ]; then WEB_APP_NAME="recway-backend-dev"; fi
        if [ -z "$IMAGE_TAG" ]; then IMAGE_TAG="latest"; fi
        
        echo "acrName=$ACR_NAME" >> $GITHUB_OUTPUT
        echo "rg=$RESOURCE_GROUP" >> $GITHUB_OUTPUT
        echo "web=$WEB_APP_NAME" >> $GITHUB_OUTPUT
        echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
        # Derive ACR login server
        echo "loginServer=$(az acr show -n ${{ github.event.inputs.acrName }} --query loginServer -o tsv)" >> $GITHUB_OUTPUT

    - name: Build image
      run: |
        docker build -t ${{ steps.vars.outputs.loginServer }}/recway-single:${{ steps.vars.outputs.tag }} .

    - name: ACR Login using az
      run: |
        az acr login -n ${{ steps.vars.outputs.acrName }}

    - name: Push image
      run: |
        docker push ${{ steps.vars.outputs.loginServer }}/recway-single:${{ steps.vars.outputs.tag }}

    - name: Update Web App container
      run: |
        az webapp config container set -g ${{ steps.vars.outputs.rg }} -n ${{ steps.vars.outputs.web }} \
          --docker-custom-image-name ${{ steps.vars.outputs.loginServer }}/recway-single:${{ steps.vars.outputs.tag }} \
          --docker-registry-server-url https://${{ steps.vars.outputs.loginServer }}
        az webapp restart -g ${{ steps.vars.outputs.rg }} -n ${{ steps.vars.outputs.web }}

    - name: Output URL
      run: |
        url=$(az webapp show -g ${{ steps.vars.outputs.rg }} -n ${{ steps.vars.outputs.web }} --query defaultHostName -o tsv)
        echo "App URL: https://$url"
